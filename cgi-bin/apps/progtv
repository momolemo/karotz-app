#!/bin/bash

#Pour creation declaration de la variable :
#CNF_DATADIR="../.."

source /www/cgi-bin/setup.inc
source /www/cgi-bin/url.inc
source /www/cgi-bin/utils.inc
source /www/cgi-bin/tts.inc

XMLFILE="${CNF_DATADIR}/Apps/Progtv/Data/xmlfile.xml"
URLXML="http://www.telez.fr/programmeTv/flux-rss"
PROGFILE="${CNF_DATADIR}/Apps/Progtv/Data/progfile.txt"

KillProcess SOUNDS

ReadUrlParam
DOLIST=${URLParam[dolist]}
LISTECHAINE=${URLParam[listechaine]}

#check des paramètres


#POUR DEBUG
#DOLIST=$1
#LISTECHAINE=$2


#Check des répertoires
CheckMandatoryDirectory "${CNF_DATADIR}/Apps"
CheckMandatoryDirectory "${CNF_DATADIR}/Apps/ProgTV"
CheckMandatoryDirectory "${CNF_DATADIR}/Apps/ProgTV/Data" 
CheckMandatoryDirectory "${CNF_DATADIR}/Tmp"


#recuperation du flux xml
function getProg 
{
	wget -q -O ${XMLFILE} ${URLXML} >>/dev/null 2>>/dev/null

	cat ${XMLFILE} | awk '/<item>/, /<\/item>/' | awk -F "<title><\!\[CDATA\[|\]\]></title>|<description><\!\[CDATA\[<div> |<br\/>" '$2 != "" && $1 ~ /.*<link>.*/ {print $2} $2 != "" && $1 !~ /.*<link>.*/ {print "#"$2}'> ${PROGFILE} 
}

function listeChaine
{
	while read LIGNE
	do
		if [[ ${CHAINE} != "" ]]
		then
			CHAINE=${CHAINE}","
		fi
		CHAINE=${CHAINE}"{ \"id\":\"${LIGNE}\"}"
	done <<< "$(grep "#" ${PROGFILE}|sed 's/#//')"
	DATA="{ \"Chaine\": [${CHAINE}], \"return\":\"0\"}"
}

function getProgChaine
{
	while read LIGNE
	do
		PROG=$(sed -n "/${LIGNE}/{n;p;}" ${PROGFILE})
		ttsProg "${LIGNE}" "${PROG}"	
	done <<< "$(echo ${LISTECHAINE} | sed 's/_/\n/g')"
}

function ttsProg
{
	TTS="$1"",""$2"
	VOICE="margaux22k"
	NO_CACHE=0
	RAW_VOICE="margaux"
	MUTE=0
	if [ ! -e "${CNF_DATADIR}/Run/karotz.sleep" ]
	then
		AcapelaTTS "${TTS}" "${VOICE}" "${NO_CACHE}" "${RAW_VOICE}" "${MUTE}"
	else
		DATA='{"return":"1","msg":"Unable to perform action, rabbit is sleeping."}'
	fi
}

Log "[APPS][PROGTV]" "recuperation des programmes"
getProg

if [[ "${DOLIST}" == "1" ]]
then
	Log "[APPS][PROGTV]" "envoie liste chaine"
	listeChaine
else
	Log "[APPS][PROGTV]" "TTS du programme"
	getProgChaine
	DATA="{ \"return\":\"0\"}"
fi

SendResponse "${DATA}"
